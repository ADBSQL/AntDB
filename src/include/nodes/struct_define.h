
/*
 * NOTES
 *  ******************************
 *  *** DO NOT EDIT THIS FILE! ***
 *  ******************************
 *
 *  It has been GENERATED by src/backend/nodes/gen_nodes.pl
 */
#ifndef BEGIN_STRUCT
#	define BEGIN_STRUCT(t)
#endif
#ifndef END_STRUCT
#	define END_STRUCT(t)
#endif

#ifndef NODE_BASE2
#	define NODE_BASE2(t,m) NODE_BASE(t)
#endif
#ifndef NODE_SAME
#	define NODE_SAME(t1,t2) \
		BEGIN_NODE(t1)		\
			NODE_BASE(t2)	\
		END_NODE(t1)
#endif
#ifndef NODE_ARG_
#	define NODE_ARG_ node
#endif

#ifndef NODE_BASE
#	define NODE_BASE(b)
#endif
#ifndef NODE_NODE
#	define NODE_NODE(t,m)
#endif
#ifndef NODE_NODE_MEB
#	define NODE_NODE_MEB(t,m)
#endif
#ifndef NODE_NODE_ARRAY
#	define NODE_NODE_ARRAY(t,m,l)
#endif
#ifndef NODE_BITMAPSET
#	define NODE_BITMAPSET(t,m)
#endif
#ifndef NODE_BITMAPSET_ARRAY
#	define NODE_BITMAPSET_ARRAY(t,m,l)
#endif
#ifndef NODE_RELIDS
#	define NODE_RELIDS(t,m) NODE_BITMAPSET(Bitmapset,m)
#endif
#ifndef NODE_RELIDS_ARRAY
#	define NODE_RELIDS_ARRAY(t,m,l) NODE_BITMAPSET_ARRAY(Bitmapset,m,l)
#endif
#ifndef NODE_LOCATION
#	define NODE_LOCATION(t,m) NODE_SCALAR(t,m)
#endif
#ifndef NODE_SCALAR
#	define NODE_SCALAR(t,m)
#endif
#ifndef NODE_OID
#	define NODE_OID(t,m) NODE_SCALAR(Oid, m)
#endif
#ifndef NODE_SCALAR_POINT
#	define NODE_SCALAR_POINT(t,m,l)
#endif
#ifndef NODE_SCALAR_ARRAY
#	define NODE_SCALAR_ARRAY NODE_SCALAR_POINT
#endif
#ifndef NODE_OTHER_POINT
#	define NODE_OTHER_POINT(t,m)
#endif
#ifndef NODE_STRING
#	define NODE_STRING(m)
#endif
#ifndef NODE_StringInfo
#	define NODE_StringInfo(m)
#endif
#ifndef NODE_STRUCT
#	define NODE_STRUCT(t,m)
#endif
#ifndef NODE_STRUCT_ARRAY
#	define NODE_STRUCT_ARRAY(t,m,l)
#endif
#ifndef NODE_STRUCT_LIST
#	define NODE_STRUCT_LIST(t,m)
#endif
#ifndef NODE_STRUCT_MEB
#	define NODE_STRUCT_MEB(t,m)
#endif
#ifndef NODE_ENUM
#	define NODE_ENUM(t,m)
#endif
#ifndef NODE_DATUM
#	define NODE_DATUM(t, m, o, n)
#endif

#ifndef NO_STRUCT_QualCost
BEGIN_STRUCT(QualCost)
	NODE_SCALAR(Cost,startup)
	NODE_SCALAR(Cost,per_tuple)
END_STRUCT(QualCost)
#endif /* NO_STRUCT_QualCost */

#ifndef NO_STRUCT_MergeScanSelCache
BEGIN_STRUCT(MergeScanSelCache)
	NODE_SCALAR(Oid,opfamily)
	NODE_SCALAR(Oid,collation)
	NODE_SCALAR(int,strategy)
	NODE_SCALAR(bool,nulls_first)
	NODE_SCALAR(Selectivity,leftstartsel)
	NODE_SCALAR(Selectivity,leftendsel)
	NODE_SCALAR(Selectivity,rightstartsel)
	NODE_SCALAR(Selectivity,rightendsel)
END_STRUCT(MergeScanSelCache)
#endif /* NO_STRUCT_MergeScanSelCache */

#ifndef NO_STRUCT_ParamExternData
BEGIN_STRUCT(ParamExternData)
	NODE_DATUM(Datum,value,NODE_ARG_->ptype, NODE_ARG_->isnull)
	NODE_SCALAR(bool,isnull)
	NODE_SCALAR(uint16,pflags)
	NODE_SCALAR(Oid,ptype)
END_STRUCT(ParamExternData)
#endif /* NO_STRUCT_ParamExternData */

#ifndef NO_STRUCT_ParamListInfoData
BEGIN_STRUCT(ParamListInfoData)
	NODE_OTHER_POINT(ParamFetchHook,paramFetch)
	NODE_OTHER_POINT(void,paramFetchArg)
	NODE_OTHER_POINT(ParserSetupHook,parserSetup)
	NODE_OTHER_POINT(void,parserSetupArg)
	NODE_SCALAR(int,numParams)
	NODE_BITMAPSET(Bitmapset,paramMask)
	NODE_STRUCT_ARRAY(ParamExternData,params, NODE_ARG_->numParams)
END_STRUCT(ParamListInfoData)
#endif /* NO_STRUCT_ParamListInfoData */
