# ----------
# src/test/regress/parallel_schedule
#
# By convention, we put no more than twenty tests in any one parallel group;
# this limits the number of connections needed to run the tests.
# ----------

test: sinh cosh round round(date) trunc to_date regexp_substr greatest least trim substr nls_initcap nls_lower nls_upper lpad rpad nullif coalesce add_months months_between
test: next_day last_day regexp_like translate to_timestamp to_yminterval to_dsinterval tanh remainder bitand nvl nvl2 nanvl lnnvl new_time sessiontimezone extract
test: regexp regexp_count regexp_instr regexp_replace to_char to_number bin_to_num numtodsinterval numtoyminterval soundex instr length dump decode charset tm_op_days
test: create_sequence create_primary_foreign_key create_other_constraints alter_column alter_constraints delete save_rollback sign base_query advanced_query set_function datatype ora_alias ora_in_notin ora_minus

ignore: rownum_rowid

# run tablespace by itself, and first, because it forces a checkpoint;
# we'd prefer not to have checkpoints later in the tests because that
# interferes with crash-recovery testing.
test: tablespace

# ----------
# The first group of parallel tests
# ----------
test: boolean char name varchar text int2 int4 int8 oid float4 float8 bit numeric txid uuid enum money rangetypes pg_lsn regproc

# ----------
# The second group of parallel tests
# strings depends on char, varchar and text
# numerology depends on int2, int4, int8, float4, float8
# ----------
test: strings numerology point lseg line box path polygon circle date time timetz timestamp timestamptz interval inet macaddr macaddr8 tstypes

# ----------
# Another group of parallel tests
# geometry depends on point, lseg, box, path, polygon and circle
# horology depends on interval, timetz, timestamp, timestamptz
# ----------
test: geometry horology regex oidjoins type_sanity opr_sanity misc_sanity comments expressions

# ----------
# These four each depend on the previous one
# ----------
test: create_function_1
test: create_type
test: create_table
test: create_function_2

# ----------
# Load huge amounts of data
# We should split the data files into single files and then
# execute two copy tests parallel, to check that copy itself
# is concurrent safe.
# ----------
test: copy copyselect copydml insert insert_conflict

# ----------
# More groups of parallel tests
# ----------
test: create_misc create_operator create_procedure
# These depend on create_misc and create_operator
test: create_index create_index_spgist create_view index_including index_including_gist

# ----------
# Another group of parallel tests
# ----------
test: create_aggregate create_function_3 create_cast constraints triggers select inherit typed_table vacuum drop_if_exists updatable_views roleattributes create_am hash_func errors

# ----------
# sanity_check does a vacuum, affecting the sort order of SELECT *
# results. So it should not run parallel to other tests.
# ----------
test: sanity_check

# ----------
# Another group of parallel tests
# Note: the ignore: line does not run random, just mark it as ignorable
# ----------
ignore: random
test: select_into select_distinct select_distinct_on select_implicit select_having subselect union case join aggregates transactions random portals arrays btree_index hash_index update delete namespace prepared_xacts

# ----------
# Another group of parallel tests
# ----------
test: brin gin gist spgist privileges init_privs security_label collate matview lock replica_identity rowsecurity object_address tablesample groupingsets drop_operator password identity generated join_hash

# ----------
# Another group of parallel tests
# ----------
test: create_table_like alter_generic alter_operator misc async dbsize misc_functions sysviews tsrf tidscan

# rules cannot run concurrently with any test that creates
# a view or rule in the public schema
test: rules psql psql_crosstab amutils stats_ext

# run by itself so it can run parallel workers
test: select_parallel
test: write_parallel

# no relation related tests can be put in this group
test: publication subscription

# ----------
# Another group of parallel tests
# ----------
test: select_views portals_p2 foreign_key cluster dependency guc bitmapops combocid tsearch tsdicts foreign_data window xmlmap functional_deps advisory_lock indirect_toast equivclass

# ----------
# Another group of parallel tests (JSON related)
# ----------
test: json jsonb json_encoding jsonpath jsonpath_encoding jsonb_jsonpath

# ----------
# Another group of parallel tests
# NB: temp.sql does a reconnect which transiently uses 2 connections,
# so keep this parallel group to at most 19 tests
# ----------
test: plancache limit plpgsql copy2 temp domain rangefuncs prepare conversion truncate alter_table sequence polymorphism rowtypes returning largeobject with xml

# ----------
# Another group of parallel tests
# ----------
test: partition_join partition_prune reloptions hash_part indexing partition_aggregate partition_info

# event triggers cannot run concurrently with any test that runs DDL
test: event_trigger
# this test also uses event triggers, so likewise run it by itself
test: fast_default

# run stats by itself because its delay may be insufficient under heavy load
test: stats

test: case_a10_l1_ora_func_to_dsinterval
test: case_a11_l1_ora_func_to_date
test: case_a12_l1_ora_func_substr
test: case_a13_l1_ora_func_sign
test: case_a14_l1_ora_func_sinh
test: case_a15_l1_ora_func_soundex
test: case_a16_l1_ora_func_sys_extract_utc
test: case_a17_l1_ora_func_tanh
test: case_a18_l1_ora_func_trunc
test: case_a19_l1_ora_func_cosh
test: case_a1_l1_ora_func_trim
test: case_a20_l1_ora_func_first
test: case_a21_l1_ora_func_add_months
test: case_a22_l1_ora_func_bitand
test: case_a23_l1_ora_func_coalesce
test: case_a24_l1_ora_func_extract
test: case_a25_l1_ora_func_greatest
test: case_a26_l1_ora_func_instr
test: case_a27_l1_ora_func_last
test: case_a28_l1_ora_func_last_day
test: case_a29_l1_ora_func_least
test: case_a2_l1_ora_func_translate
test: case_a30_l1_ora_func_length
test: case_a31_l1_ora_func_lnnvl
test: case_a32_l1_ora_func_lpad
test: case_a33_l1_ora_func_max
test: case_a34_l1_ora_func_min
test: case_a35_l1_ora_func_minus
test: case_a36_l1_ora_func_mod
test: case_a38_l1_ora_func_nanvl
test: case_a39_l1_ora_func_new_time
test: case_a3_l1_ora_func_to_yminterval
test: case_a40_l1_ora_func_next_day
test: case_a41_l1_ora_func_nls_charset_id
test: case_a42_l1_ora_func_nls_charset_name
test: case_a43_l1_ora_func_nls_initcap
test: case_a44_l1_ora_func_nls_lower
test: case_a45_l1_ora_func_nls_upper
test: case_a46_l1_ora_func_nullif
test: case_a47_l1_ora_func_numtodsinterval
test: case_a48_l1_ora_func_numtoyminterval
test: case_a49_l1_ora_func_nvl
test: case_a50_l1_ora_func_nvl2
test: case_a51_l1_ora_func_pipe_row
test: case_a52_l1_ora_func_regexp_count
test: case_a54_l1_ora_func_regexp_like
test: case_a55_l1_ora_func_regexp_replace
test: case_a56_l1_ora_func_remainder
test: case_a57_l1_ora_func_replace
test: case_a58_l1_ora_func_round
test: case_a59_l1_ora_func_round_date
test: case_a5_l1_ora_func_to_timestamp
test: case_a61_l1_ora_func_rpad
test: case_a63_l1_ora_func_decode
test: case_a7_l1_ora_func_to_number
test: case_a9_l1_ora_func_to_char
test: case_b2_l1_ora_func_set_function
test: cast_oracle_operator_test
test: cast_oracle_function_test