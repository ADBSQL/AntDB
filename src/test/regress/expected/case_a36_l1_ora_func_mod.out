set grammar to oracle;
select mod(7,5) from dual;
 MOD(7,5) 
----------
        2
(1 row)

select mod(11.9,3) from dual;
 MOD(11.9,3) 
-------------
         2.9
(1 row)

select mod(-99.8768678,4) from dual;
 MOD(-99.8768678,4) 
--------------------
         -3.8768678
(1 row)

select mod(-5.6,-2.5) from dual;
 MOD(-5.6,-2.5) 
----------------
           -0.6
(1 row)

select mod(0,2) from dual;
 MOD(0,2) 
----------
        0
(1 row)

select mod(0,0) from dual;
 MOD(0,0) 
----------
        0
(1 row)

select mod(3,0) from dual;
 MOD(3,0) 
----------
        3
(1 row)

select mod(exp(4),3) from dual;
   MOD(EXP(4),3)   
-------------------
 0.598150033144239
(1 row)

select mod(sin(0.9),tan(1)) from dual;
 MOD(SIN(0.9),TAN(1)) 
----------------------
    0.783326909627483
(1 row)

select mod(1.98*4/(1.9+1.1),1.5*2) from dual;
 MOD(1.98*4/(1.9+1.1),1.5*2) 
-----------------------------
                        2.64
(1 row)

select mod(to_number('34'),3) from dual;
 MOD(TO_NUMBER('34'),3) 
------------------------
                      1
(1 row)

select mod(to_char(29),3) from dual;
 MOD(TO_CHAR(29),3) 
--------------------
                  2
(1 row)

select mod('7',5) from dual;
 MOD('7',5) 
------------
          2
(1 row)

select mod(11.9,'3') from dual;
 MOD(11.9,'3') 
---------------
           2.9
(1 row)

select mod('-8.1','4') from dual;
 MOD('-8.1','4') 
-----------------
            -0.1
(1 row)

select mod('008','4.000') from dual;
 MOD('008','4.000') 
--------------------
                  0
(1 row)

select mod('0',2) from dual;
 MOD('0',2) 
------------
          0
(1 row)

select mod('NaN',2) from dual;
ERROR:  NaN is invalid number.
select mod('NaN','NaN') from dual;
ERROR:  NaN is invalid number.
select mod(5,'NaN') from dual;
ERROR:  NaN is invalid number.
select mod('',null) from dual;
 MOD('',NULL) 
--------------
             
(1 row)

select mod(null,3) from dual;
 MOD(NULL,3) 
-------------
            
(1 row)

select mod('','') from dual;
 MOD('','') 
------------
           
(1 row)

select mod(11,4) from dual;
 MOD(11,4) 
-----------
         3
(1 row)

select mod(11,-4) from dual;
 MOD(11,-4) 
------------
          3
(1 row)

select mod(-11,4) from dual;
 MOD(-11,4) 
------------
         -3
(1 row)

select mod(-11,-4) from dual;
 MOD(-11,-4) 
-------------
          -3
(1 row)

CREATE TABLE t4test (id int,num int);
insert into t4test values(1,mod(1211,12));
insert into t4test values(2,mod(12234,23));
select * from t4test order by id;
 ID | NUM 
----+-----
  1 |  11
  2 |  21
(2 rows)

update t4test set num=mod(num,4.5);
select * from t4test order by id;
 ID | NUM 
----+-----
  1 |   2
  2 |   3
(2 rows)

drop table t4test;
create table t_mod (d1 number,d2 number,i1 int ,i2 int ,n1 numeric,n2 numeric);
insert into t_mod values(22.445,-0.3145,-1,5,145.251,-23);
--double precision | integer
select mod(d1,i1) from t_mod;
 MOD(D1,I1) 
------------
      0.445
(1 row)

--double precision | double precision
select mod(d2,d1) from t_mod;
 MOD(D2,D1) 
------------
    -0.3145
(1 row)

--numeric          | integer
select mod(n1,i2) from t_mod;
 MOD(N1,I2) 
------------
          0
(1 row)

--integer          | numeric
select mod(i1,n2) from t_mod;
 MOD(I1,N2) 
------------
         -1
(1 row)

--unknown          | numeric
select mod('23',n1) from t_mod;
 MOD('23',N1) 
--------------
           23
(1 row)

--numeric          | unknown
select mod(n2,'-5.256') from t_mod;
 MOD(N2,'-5.256') 
------------------
           -1.976
(1 row)

--unknown          | unknown
select mod('4.1','-5.256') from t_mod;
 MOD('4.1','-5.256') 
---------------------
                 4.1
(1 row)

-- -                | -
select mod(0,0) from t_mod;
 MOD(0,0) 
----------
        0
(1 row)

drop table t_mod;
